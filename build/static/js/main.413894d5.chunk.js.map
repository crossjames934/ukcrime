{"version":3,"sources":["footprints.svg","drugs.svg","firearm.svg","stolenGoods.svg","bobbyPin.svg","mapIcon.svg","chartIcon.svg","CrimeOverlay.js","GeoMap.js","Graphs.js","Controls.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CrimeOverlay","crime","overlayStyle","react_default","a","createElement","className","style","age_range","gender","object_of_search","self_defined_ethnicity","outcome","location","street","name","sortedBy","this","props","replace","split","toUpperCase","join","incidents","position","width","padding","borderRadius","background","zIndex","top","mouseY","left","mouseX","opacity","pointerEvents","display","forMap","forGraph","Component","GeoMap","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createMap","_this$props","latitude","longitude","zoom","mapContainer","innerHTML","map","mapboxgl","Map","container","center","on","setTimeout","window","mouseIsDown","_this$map$getCenter","getCenter","lng","lat","updateCoordinates","getZoom","getPostcode","placeMarkers","markers","forEach","m","remove","previousMarkersContainers","document","getElementsByClassName","parentNode","removeChild","data","el","img","src","drugIcon","firearmIcon","stolenIcon","bobbyIcon","evidenceIcon","appendChild","onmouseover","e","event","setState","highlightedCrime","clientX","clientY","onmouseout","Marker","setLngLat","addTo","push","previousLat","previousLon","previousDataLength","length","previousMapView","mapView","state","accessToken","setCenter","_this2","src_CrimeOverlay","ref","mapSize","height","Graphs","highlightedBar","handleSelect","bind","assertThisInitialized","mouseout","mouseover","d","prop","_this3","_this4","getElementById","values","properties","keys","splice","indexOf","mapPixelWidth","innerWidth","mapPixelHeight","innerHeight","chartPaddingX","chartPaddingY","chartWidth","chartHeight","xGap","xScale","d3","range","domain","yScale","nice","svg","append","attr","selectAll","enter","i","barWidth","xAxis","yAxis","concat","sortByCategory","category","listOfSearchObjects","datum","uniqueValues","toConsumableArray","Set","jsObjectForGraph","property","filter","createGraph","target","value","selectorContainerStyle","fontSize","htmlFor","margin","id","onChange","Controls","gap","verticalMargin","onSubmit","preventDefault","updatePostcode","postcode","type","changeDate","date","max","loading","recordCount","onClick","switchView","MapIcon","alt","ChartIcon","App","streetNames","addEventListener","getData","crimeAPI","axios","get","then","res","filteredNames","streetName","pos","catch","err","console","log","lon","arguments","undefined","Number","toFixed","test","result","latLonToPostcodeAPI","getLatitudeAndLongitude","src_GeoMap","src_Graphs","src_Controls","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.413894d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/footprints.a6978a28.svg\";","module.exports = __webpack_public_path__ + \"static/media/drugs.0409f2eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/firearm.4b5ca8ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/stolenGoods.9d6efa39.svg\";","module.exports = __webpack_public_path__ + \"static/media/bobbyPin.867f712d.svg\";","module.exports = __webpack_public_path__ + \"static/media/mapIcon.76a823a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/chartIcon.534f6b50.svg\";","import React, {Component} from 'react';\n\nclass CrimeOverlay extends Component {\n    forMap(crime, overlayStyle) {\n        return(\n            <div className=\"softShadow\" style={overlayStyle}>\n                <p>{crime ? crime.age_range ? \"Age: \" + crime.age_range : \"No age information\" : \"\"}</p>\n                <p>{crime ? crime.gender || \"No gender information\" : \"\"}</p>\n                <p>{crime ? crime.object_of_search || \"No defined object of search\" : \"\"}</p>\n                <p>{crime ? crime.self_defined_ethnicity || \"No self-defined ethnicity\" : \"\"}</p>\n                <p>{crime ? crime.outcome || \"No specified outcome\" : \"\"}</p>\n                <p>{crime ? crime.location.street.name || \"No location\" : \"\"}</p>\n            </div>\n        );\n    }\n\n    forGraph(crime, overlayStyle) {\n        let sortedBy = this.props.sortedBy.replace(/_/g, \" \");\n        sortedBy = sortedBy.split(\"\");\n        sortedBy[0] = sortedBy[0].toUpperCase();\n        sortedBy = sortedBy.join(\"\");\n        return(\n            <div className=\"softShadow\" style={overlayStyle}>\n                <p>{sortedBy+ \": \" + crime}</p>\n                <p>Incidents: {this.props.incidents}</p>\n            </div>\n        );\n    }\n\n    render() {\n        const overlayStyle = {\n            position: \"fixed\",\n            width: 300,\n            padding: 20,\n            borderRadius: 10,\n            background: \"#BCDBF1\",\n            zIndex: 100,\n            top: this.props.mouseY,\n            left: this.props.mouseX,\n            opacity: 0.9,\n            pointerEvents: \"none\",\n            display: this.props.crime ? \"block\" : \"none\"\n        };\n        const crime = this.props.crime;\n        return (\n            <div>\n                {this.props.forMap ? this.forMap(crime, overlayStyle) : this.forGraph(crime, overlayStyle)}\n            </div>\n        );\n    }\n}\n\nexport default CrimeOverlay;","import React, {Component} from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './App.css';\n\nimport CrimeOverlay from './CrimeOverlay';\n\nimport drugIcon from './drugs.svg';\nimport firearmIcon from './firearm.svg';\nimport stolenIcon from './stolenGoods.svg';\nimport bobbyIcon from './bobbyPin.svg';\nimport evidenceIcon from './footprints.svg';\n\nclass GeoMap extends Component {\n    constructor(props) {\n        super(props);\n        this.previousLat = this.props.latitude;\n        this.previousLon = this.props.longitude;\n        this.markers = [];\n        this.previousDataLength = this.props.data.length;\n        this.previousMapView = this.props.mapView;\n        this.state = {\n            highlightedCrime: null,\n            mouseX: 0,\n            mouseY: 0,\n            markers: [],\n        };\n        mapboxgl.accessToken = 'pk.eyJ1IjoiY3Jvc3NqYW1lczkzNCIsImEiOiJjanRsYTBoaGkwYmVnM3lwZnRqcm1raGkwIn0.n6wWS702HkBqpsQ79d-QgA';\n    }\n\n    createMap = () => {\n        const {latitude, longitude, zoom} = this.props;\n        this.mapContainer.innerHTML = \"\";\n        this.map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: 'mapbox://styles/mapbox/streets-v9',\n            center: [longitude, latitude],\n            zoom\n        });\n        this.map.on('move', () => {\n            setTimeout(() => {\n                if (!window.mouseIsDown) {\n                    const {lng, lat} = this.map.getCenter();\n                    this.props.updateCoordinates(lat, lng, this.map.getZoom());\n                    this.props.getPostcode(lat, lng);\n                    this.placeMarkers();\n                }\n            }, 100);\n        });\n        this.map.on('zoom', () => {\n           this.placeMarkers();\n        });\n        this.placeMarkers();\n    };\n\n    placeMarkers = () => {\n        this.markers.forEach(m => {\n            m.remove();\n        });\n        this.markers = [];\n        let previousMarkersContainers = document.getElementsByClassName('markerContainer');\n        while (previousMarkersContainers[0]) {\n            previousMarkersContainers[0].parentNode.removeChild(previousMarkersContainers[0]);\n        }\n        this.props.data.forEach(crime => {\n            const el = document.createElement('div');\n            const img = document.createElement('img');\n            switch(crime.object_of_search) {\n                case \"Controlled drugs\":\n                case \"Psychoactive substances\":\n                    img.src = drugIcon;\n                    break;\n                case \"Offensive weapons\":\n                case \"Firearms\":\n                case \"Anything to threaten or harm anyone\":\n                    img.src = firearmIcon;\n                    break;\n                case \"Stolen goods\":\n                    img.src = stolenIcon;\n                    break;\n                case \"Article for use in theft\":\n                    img.src = bobbyIcon;\n                    break;\n                case \"Evidence of offences under the Act\":\n                    img.src = evidenceIcon;\n                    break;\n                default:\n                    img.src = evidenceIcon;\n                    break;\n            }\n            img.className = 'marker';\n            el.appendChild(img);\n            el.className = 'markerContainer';\n            el.onmouseover = () => {\n                const e = window.event;\n                this.setState({highlightedCrime: crime, mouseX: e.clientX, mouseY: e.clientY});\n            };\n            el.onmouseout = () => {\n                this.setState({highlightedCrime: null});\n            };\n            const m = new mapboxgl.Marker(el)\n                .setLngLat({lng: crime.location.longitude, lat: crime.location.latitude})\n                .addTo(this.map);\n\n            this.markers.push(m);\n        });\n    };\n\n    componentDidMount() {\n        this.createMap();\n    }\n\n    componentDidUpdate() {\n        if (this.props.latitude !== this.previousLat || this.props.longitude !== this.previousLon) {\n            this.previousLat = this.props.latitude;\n            this.previousLon = this.props.longitude;\n            this.map.setCenter({lng: this.props.longitude, lat: this.props.latitude});\n        }\n        if (this.previousDataLength !== this.props.data.length) {\n            this.placeMarkers();\n            this.previousDataLength = this.props.data.length;\n        }\n        if (this.previousMapView !== this.props.mapView) {\n            this.createMap();\n            this.previousMapView = this.props.mapView;\n        }\n    }\n\n    render() {\n        return (\n            <div style={{display: this.props.mapView ? \"block\" : \"none\"}}>\n                <CrimeOverlay forMap={true} mouseX={this.state.mouseX} mouseY={this.state.mouseY} crime={this.state.highlightedCrime}/>\n                <div ref={el => this.mapContainer = el} className=\"dataDisplay\"/>\n            </div>\n        );\n    }\n}\n\nexport default GeoMap;","import React, {Component} from 'react';\nimport * as d3 from 'd3';\n\nimport CrimeOverlay from './CrimeOverlay';\n\nconst chartContainer = \"chartContainer\";\nconst mapSize = {\n    width: \"90vw\",\n    height: \"80vh\"\n};\n\nclass Graphs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortedBy: \"object_of_search\",\n            highlightedBar: null,\n            mouseX: 0,\n            mouseY: 0\n        };\n        this.handleSelect = this.handleSelect.bind(this);\n        this.mouseout = this.mouseout.bind(this);\n        this.mouseover = this.mouseover.bind(this);\n    }\n\n    mouseover(d, prop) {\n        const e = window.event;\n        setTimeout(() => {\n            this.setState({highlightedBar: prop, incidents: d, mouseX: e.clientX, mouseY: e.clientY});\n        }, 150);\n    }\n\n    mouseout() {\n        setTimeout(() => {\n            this.setState({highlightedBar: null});\n        }, 150);\n    }\n\n    createGraph(data) {\n        document.getElementById(chartContainer).innerHTML = \"\";\n        // console.log(data);\n        const values = Object.values(data);\n        const properties = Object.keys(data);\n        properties.splice(properties.indexOf('null'), 1, 'No Information');\n        const mapPixelWidth = window.innerWidth * 0.9;\n        const mapPixelHeight = window.innerHeight * 0.8;\n        const chartPaddingX = mapPixelWidth * 0.1;\n        const chartPaddingY = mapPixelHeight * 0.1;\n        const chartWidth = mapPixelWidth - chartPaddingX * 2;\n        const chartHeight = mapPixelHeight - chartPaddingY * 2;\n        const xGap = chartWidth / values.length;\n        const barWidth = 25;\n        // console.log(properties, values);\n        const xScale = d3.scaleBand()\n            .range([0, chartWidth])\n            .domain(properties);\n        const yScale = d3.scaleLinear()\n            .domain([d3.max(values), 0])\n            .range([0, chartHeight])\n            .nice();\n        const svg = d3\n            .select(\"#\"+chartContainer)\n            .append(\"svg\")\n            .attr(\"width\", mapSize.width)\n            .attr(\"height\", mapSize.height)\n            .style(\"background\", '#ACCBE1');\n            // .style(\"background\", '#7C98B3');\n        svg.selectAll(\"rect\")\n            .data(values)\n            .enter()\n            .append(\"rect\")\n            .attr('class', 'barForChart')\n            .attr(\"x\", (d, i) => i * xGap + xGap / 2 + chartPaddingX - barWidth / 2)\n            .attr(\"y\", d => yScale(d) + chartPaddingY)\n            .attr(\"width\", barWidth)\n            .attr(\"height\", d => chartHeight - yScale(d))\n            .attr(\"fill\", \"#4f7ca8\")\n            .on('mouseover', (d, i) => {\n                this.mouseover(d, properties[i]);\n                // const e = window.event;\n                // this.setState({highlightedBar: properties[i], incidents: d, mouseX: e.clientX, mouseY: e.clientY});\n                // console.log(d, properties[i], e.clientX, e.clientY);\n            })\n            .on('mouseout', (d, i) => {\n                this.mouseout();\n                // console.log('out');\n                // this.setState({highlightedBar: null});\n            });\n        const xAxis = d3.axisBottom(xScale);\n        const yAxis = d3.axisLeft(yScale);\n        svg.append(\"g\")\n            .attr(\"transform\", `translate(${chartPaddingX}, ${chartHeight + chartPaddingY})`)\n            .call(xAxis);\n        svg.append(\"g\")\n            .attr(\"transform\", `translate(${chartPaddingX}, ${chartPaddingY})`)\n            .call(yAxis);\n        // d3\n        //     .select('body')\n        //     .append('div')\n        //     .style('background', '#ACCBE1')\n        //     .style('position', 'fixed')\n        //     .style('width', '300px')\n        //     .style('height', '400px')\n        //     .style('top', '10px')\n    }\n\n    componentDidUpdate() {\n        this.sortByCategory(this.state.sortedBy);\n    }\n\n    sortByCategory() {\n        const category = this.state.sortedBy;\n        const data = this.props.data;\n        const listOfSearchObjects = data.map(datum => datum[category]);\n        const uniqueValues = [...new Set(listOfSearchObjects)];\n        const jsObjectForGraph = {};\n        uniqueValues.forEach(property => {\n            jsObjectForGraph[property] = data.filter(datum => datum[category] === property).length;\n        });\n        this.createGraph(jsObjectForGraph);\n    }\n\n    handleSelect(e) {\n        this.setState({sortedBy: e.target.value}, this.sortByCategory);\n    }\n\n    render() {\n        const selectorContainerStyle = {\n            position: 'absolute',\n            width: 250,\n            top: window.innerHeight * 0.025,\n            left: window.innerWidth * 0.5 - 80,\n            fontSize: 14\n        };\n        const selectorStyle = {\n            height: 30,\n            margin: 3\n        };\n        return (\n            <div style={{display: !this.props.mapView ? \"block\" : \"none\"}}>\n                <CrimeOverlay\n                    forMap={false}\n                    crime={this.state.highlightedBar}\n                    incidents={this.state.incidents}\n                    mouseX={this.state.mouseX}\n                    mouseY={this.state.mouseY}\n                    sortedBy={this.state.sortedBy}\n                />\n                <div style={selectorContainerStyle}>\n                    <label htmlFor=\"sortBySelector\">Sort By: </label>\n                    <select style={selectorStyle} id=\"sortBySelector\" onChange={this.handleSelect}>\n                        <option value=\"object_of_search\">Object of Search</option>\n                        <option value=\"age_range\">Age Range</option>\n                        <option value=\"outcome\">Outcome</option>\n                    </select>\n                </div>\n                <div style={mapSize} className=\"dataDisplay\">\n                    <div style={mapSize} id={chartContainer}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Graphs;","import React, {Component} from 'react';\n// import axios from 'axios';\nimport MapIcon from './mapIcon.svg';\nimport ChartIcon from './chartIcon.svg';\n\nclass Controls extends Component {\n    render() {\n        const postcodeInput = \"postcodeInput\";\n        const dateInput = \"dateInput\";\n        const gap = {margin: \"0 20px\"};\n        const verticalMargin = {margin: \"10px 0\"};\n        // const icon = {\n        //     width: 40,\n        //     height: 40,\n        //     border: \"3px solid black\",\n        //     background: \"#CEE5F2\",\n        //     borderRadius: 5,\n        //     padding: 5,\n        //     cursor: \"pointer\"\n        // };\n        return(\n            <div className=\"controls softShadow\">\n                <form className=\"controlForm\" onSubmit={e => e.preventDefault()}>\n                    <div style={verticalMargin}>\n                        <label htmlFor={postcodeInput}>Post Code: &nbsp;</label>\n                        <input onChange={e => this.props.updatePostcode(e)} value={this.props.postcode} className=\"formInput\" type=\"text\" name=\"postcode\" id={postcodeInput}/>\n                    </div>\n                    <div style={gap}/>\n                    <div style={verticalMargin}>\n                        <label htmlFor={dateInput}>Date: &nbsp;</label>\n                        <input onChange={e => this.props.changeDate(e.target.value)} value={this.props.date} type=\"month\" max=\"2019-01\" className=\"formInput\" name=\"date\" id={dateInput}/>\n                    </div>\n                    <div style={gap}/>\n                    <p>{this.props.loading ? \"Loading...\" : \"Records: \" + this.props.recordCount}</p>\n                    <div style={gap}/>\n                    <img className=\"icon\" onClick={() => this.props.switchView(true)} src={MapIcon} alt=\"Map Icon\"/>\n                    <div style={gap}/>\n                    <img className=\"icon\" onClick={() => this.props.switchView(false)} src={ChartIcon} alt=\"Chart Icon\"/>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Controls;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport GeoMap from './GeoMap';\nimport Graphs from './Graphs';\nimport Controls from './Controls';\n// import StreetNames from './StreetNames';\n// import Info from './Info';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            latitude: \"51.5073\",\n            longitude: \"-0.1277\",\n            date: \"2018-12\",\n            streetNames: [],\n            zoom: \"15\",\n            loading: false,\n            postcode: \"WC2N 5DU\",\n            mapView: true // False if showing graphs instead\n        };\n        this.updateCoordinates = this.updateCoordinates.bind(this);\n        this.updatePostcode = this.updatePostcode.bind(this);\n        this.changeDate = this.changeDate.bind(this);\n        this.getPostcode = this.getPostcode.bind(this);\n        this.switchView = this.switchView.bind(this);\n        // Whether mouse is pressed or not becomes global variable for use in other components\n        window.mouseIsDown = false;\n        document.addEventListener('mousedown', () => {\n            window.mouseIsDown = true;\n        });\n        document.addEventListener('mouseup', () => {\n            window.mouseIsDown = false;\n        });\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData() {\n        let crimeAPI = `https://data.police.uk/api/stops-street?lat=${this.state.latitude}&lng=${this.state.longitude}&date=${this.state.date}`;\n        this.setState({loading: true});\n        axios\n            .get(crimeAPI)\n            .then(res => {\n                const streetNames = res.data.map(crime => crime.location.street.name);\n                const filteredNames = streetNames.filter((streetName, pos) => streetNames.indexOf(streetName) === pos);\n                this.setState({\n                    data: res.data,\n                    streetNames: filteredNames,\n                    loading: false\n                });\n                // console.log(res.data);\n                // console.log(this.state);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    updateCoordinates(lat, lon, zoom = Number(this.state.zoom)) {\n        this.setState({\n            latitude: lat.toFixed(4),\n            longitude: lon.toFixed(4),\n            zoom: zoom.toFixed(2)\n        }, this.getData);\n    }\n\n    getLatitudeAndLongitude() {\n        const postcodeAPI = \"https://api.postcodes.io/postcodes/\";\n        const postcodeRegex = /([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\\s?[0-9][A-Za-z]{2})/;\n        if (postcodeRegex.test(this.state.postcode)) {\n            axios\n                .get(postcodeAPI + this.state.postcode.split(\" \").join(\"\"))\n                .then(res => {\n                    this.updateCoordinates(res.data.result.latitude, res.data.result.longitude);\n                })\n                .catch(err => {\n                    // console.log(err)\n                });\n        }\n    }\n\n    getPostcode(lat, lon) {\n        const latLonToPostcodeAPI = `https://api.postcodes.io/postcodes?lon=${lon}&lat=${lat}`;\n        axios\n            .get(latLonToPostcodeAPI)\n            .then(res => {\n                this.setState({postcode: res.data.result[0].postcode});\n            })\n            .catch(err => {\n                // console.log(err)\n            });\n    }\n\n    updatePostcode(event) {\n        this.setState({postcode: event.target.value}, this.getLatitudeAndLongitude);\n    }\n\n    changeDate(date) {\n        this.setState({\n            date: date\n        }, this.getData);\n    }\n\n    switchView(map) {\n        this.setState({mapView: map});\n    }\n\n    render() {\n        return(\n            <div className=\"myApp\">\n                <header>\n                    <GeoMap\n                        latitude={this.state.latitude}\n                        longitude={this.state.longitude}\n                        zoom={this.state.zoom}\n                        updateCoordinates={this.updateCoordinates}\n                        getPostcode={this.getPostcode}\n                        data={this.state.data}\n                        date={this.state.date}\n                        mapView={this.state.mapView}\n                    />\n                    <Graphs\n                        mapView={this.state.mapView}\n                        data={this.state.data}\n                    />\n                    <Controls\n                        postcode={this.state.postcode}\n                        updatePostcode={this.updatePostcode}\n                        latitude={this.state.latitude}\n                        longitude={this.state.longitude}\n                        loading={this.state.loading}\n                        recordCount={this.state.data.length}\n                        changeDate={this.changeDate}\n                        date={this.state.date}\n                        updateCoordinates={this.updateCoordinates}\n                        switchView={this.switchView}\n                    />\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}