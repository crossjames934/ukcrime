{"version":3,"sources":["footprints.svg","drugs.svg","firearm.svg","stolenGoods.svg","bobbyPin.svg","mapIcon.svg","chartIcon.svg","CrimeOverlay.js","GeoMap.js","Controls.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CrimeOverlay","overlayStyle","position","width","padding","borderRadius","background","zIndex","top","this","props","mouseY","left","mouseX","pointerEvents","display","crime","react_default","a","createElement","className","style","age_range","gender","object_of_search","self_defined_ethnicity","outcome","location","street","name","Component","GeoMap","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","previousLat","latitude","previousLon","longitude","markers","previousDataLength","data","length","state","highlightedCrime","mapboxgl","accessToken","_this2","_this$props","zoom","mapContainer","innerHTML","map","Map","container","center","on","setTimeout","window","mouseIsDown","_this2$map$getCenter","getCenter","lng","lat","updateCoordinates","getZoom","getPostcode","placeMarkers","_this3","previousMarkersContainers","document","getElementsByClassName","parentNode","removeChild","forEach","el","img","src","drugIcon","firearmIcon","stolenIcon","bobbyIcon","evidenceIcon","appendChild","onmouseover","e","event","setState","clientX","clientY","onmouseout","push","Marker","setLngLat","addTo","createMap","setCenter","_this4","src_CrimeOverlay","ref","Controls","gap","margin","icon","height","onSubmit","preventDefault","htmlFor","onChange","updatePostcode","value","postcode","type","id","changeDate","target","date","max","loading","recordCount","MapIcon","alt","ChartIcon","App","streetNames","bind","assertThisInitialized","addEventListener","getData","crimeAPI","concat","axios","get","then","res","filteredNames","filter","streetName","pos","indexOf","catch","err","console","log","lon","arguments","undefined","Number","toFixed","test","split","join","result","latLonToPostcodeAPI","getLatitudeAndLongitude","src_GeoMap","src_Controls","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4800070d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/footprints.a6978a28.svg\";","module.exports = __webpack_public_path__ + \"static/media/drugs.0409f2eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/firearm.4b5ca8ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/stolenGoods.9d6efa39.svg\";","module.exports = __webpack_public_path__ + \"static/media/bobbyPin.867f712d.svg\";","module.exports = __webpack_public_path__ + \"static/media/mapIcon.76a823a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/chartIcon.534f6b50.svg\";","import React, {Component} from 'react';\n\nclass CrimeOverlay extends Component {\n    render() {\n        const overlayStyle = {\n            position: \"fixed\",\n            width: 300,\n            padding: 20,\n            borderRadius: 10,\n            background: \"#ACCBE1\",\n            zIndex: 100,\n            top: this.props.mouseY,\n            left: this.props.mouseX,\n            pointerEvents: \"none\",\n            display: this.props.crime ? \"block\" : \"none\"\n        };\n        const crime = this.props.crime;\n        return (\n            <div className=\"softShadow\" style={overlayStyle}>\n                <p>{crime ? crime.age_range || \"No age information\" : \"\"}</p>\n                <p>{crime ? crime.gender || \"No gender information\" : \"\"}</p>\n                <p>{crime ? crime.object_of_search || \"No defined object of search\" : \"\"}</p>\n                <p>{crime ? crime.self_defined_ethnicity || \"No self-defined ethnicity\" : \"\"}</p>\n                <p>{crime ? crime.outcome || \"No specified outcome\" : \"\"}</p>\n                <p>{crime ? crime.location.street.name || \"No location\" : \"\"}</p>\n            </div>\n        );\n    }\n}\n\nexport default CrimeOverlay;","import React, {Component} from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './App.css';\n\nimport CrimeOverlay from './CrimeOverlay';\n\nimport drugIcon from './drugs.svg';\nimport firearmIcon from './firearm.svg';\nimport stolenIcon from './stolenGoods.svg';\nimport bobbyIcon from './bobbyPin.svg';\nimport evidenceIcon from './footprints.svg';\n\nclass GeoMap extends Component {\n    constructor(props) {\n        super(props);\n        this.previousLat = this.props.latitude;\n        this.previousLon = this.props.longitude;\n        this.markers = [];\n        this.previousDataLength = this.props.data.length;\n        this.state = {\n            highlightedCrime: null,\n            mouseX: 0,\n            mouseY: 0\n        };\n        mapboxgl.accessToken = 'pk.eyJ1IjoiY3Jvc3NqYW1lczkzNCIsImEiOiJjanRsYTBoaGkwYmVnM3lwZnRqcm1raGkwIn0.n6wWS702HkBqpsQ79d-QgA';\n    }\n\n    createMap() {\n        const {latitude, longitude, zoom} = this.props;\n        this.mapContainer.innerHTML = \"\";\n        this.map = new mapboxgl.Map({\n            container: this.mapContainer,\n            style: 'mapbox://styles/mapbox/streets-v9',\n            center: [longitude, latitude],\n            zoom\n        });\n        this.map.on('move', () => {\n            setTimeout(() => {\n                if (!window.mouseIsDown) {\n                    const {lng, lat} = this.map.getCenter();\n                    this.props.updateCoordinates(lat, lng, this.map.getZoom());\n                    this.props.getPostcode(lat, lng);\n                    this.placeMarkers();\n                }\n            }, 100);\n        });\n        this.map.on('zoom', () => {\n           this.placeMarkers();\n        });\n    }\n\n    placeMarkers() {\n        this.markers = [];\n        // let previousMarkers = document.getElementsByClassName('marker');\n        // while (previousMarkers[0]) {\n        //     previousMarkers[0].parentNode.removeChild(previousMarkers[0]);\n        // }\n        let previousMarkersContainers = document.getElementsByClassName('markerContainer');\n        while (previousMarkersContainers[0]) {\n            previousMarkersContainers[0].parentNode.removeChild(previousMarkersContainers[0]);\n        }\n        this.props.data.forEach(crime => {\n            const el = document.createElement('div');\n            const img = document.createElement('img');\n            switch(crime.object_of_search) {\n                case \"Controlled drugs\":\n                    img.src = drugIcon;\n                    break;\n                case \"Offensive weapons\":\n                    img.src = firearmIcon;\n                    break;\n                case \"Stolen goods\":\n                    img.src = stolenIcon;\n                    break;\n                case \"Article for use in theft\":\n                    img.src = bobbyIcon;\n                    break;\n                case \"Evidence of offences under the Act\":\n                    img.src = evidenceIcon;\n                    break;\n                default:\n                    img.src = evidenceIcon;\n                    break;\n            }\n            img.className = 'marker';\n            el.appendChild(img);\n            el.className = 'markerContainer';\n            el.onmouseover = () => {\n                const e = window.event;\n                this.setState({highlightedCrime: crime, mouseX: e.clientX, mouseY: e.clientY});\n            };\n            el.onmouseout = () => {\n                this.setState({highlightedCrime: null});\n            };\n            this.markers.push(new mapboxgl.Marker(el)\n                .setLngLat({lng: crime.location.longitude, lat: crime.location.latitude})\n                .addTo(this.map));\n        });\n    }\n\n    componentDidMount() {\n        this.createMap();\n    }\n\n    componentDidUpdate() {\n        if (this.props.latitude !== this.previousLat || this.props.longitude !== this.previousLon) {\n            this.previousLat = this.props.latitude;\n            this.previousLon = this.props.longitude;\n            this.map.setCenter({lng: this.props.longitude, lat: this.props.latitude});\n        }\n        if (this.previousDataLength !== this.props.data.length) {\n            this.placeMarkers();\n            this.previousDataLength = this.props.data.length;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <CrimeOverlay mouseX={this.state.mouseX} mouseY={this.state.mouseY} crime={this.state.highlightedCrime}/>\n                <div ref={el => this.mapContainer = el} className=\"geoMap\"/>\n            </div>\n        );\n    }\n}\n\nexport default GeoMap;","import React, {Component} from 'react';\n// import axios from 'axios';\nimport MapIcon from './mapIcon.svg';\nimport ChartIcon from './chartIcon.svg';\n\nclass Controls extends Component {\n    render() {\n        const postcodeInput = \"postcodeInput\";\n        const dateInput = \"dateInput\";\n        const gap = {margin: \"0 20px\"};\n        const icon = {width: 40, height: 40};\n        return(\n            <div className=\"controls softShadow\">\n                <form className=\"controlForm\" onSubmit={e => e.preventDefault()}>\n                    <label htmlFor={postcodeInput}>Post Code: &nbsp;</label>\n                    <input onChange={e => this.props.updatePostcode(e)} value={this.props.postcode} className=\"formInput\" type=\"text\" name=\"postcode\" id={postcodeInput}/>\n                    <div style={gap}/>\n                    <label htmlFor={dateInput}>Date: &nbsp;</label>\n                    <input onChange={e => this.props.changeDate(e.target.value)} value={this.props.date} type=\"month\" max=\"2019-01\" className=\"formInput\" name=\"date\" id={dateInput}/>\n                    <div style={gap}/>\n                    <p>{this.props.loading ? \"Loading...\" : \"Records: \" + this.props.recordCount}</p>\n                    <div style={gap}/>\n                    <img src={MapIcon} style={icon} alt=\"Map Icon\"/>\n                    <div style={gap}/>\n                    <img src={ChartIcon} style={icon} alt=\"Chart Icon\"/>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Controls;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport GeoMap from './GeoMap';\nimport Controls from './Controls';\n// import StreetNames from './StreetNames';\n// import Info from './Info';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            latitude: \"51.5073\",\n            longitude: \"-0.1277\",\n            date: \"2019-01\",\n            streetNames: [],\n            zoom: \"15\",\n            loading: false,\n            postcode: \"WC2N 5DU\"\n        };\n        this.updateCoordinates = this.updateCoordinates.bind(this);\n        this.updatePostcode = this.updatePostcode.bind(this);\n        this.changeDate = this.changeDate.bind(this);\n        this.getPostcode = this.getPostcode.bind(this);\n        // Whether mouse is pressed or not becomes global variable for use in other components\n        window.mouseIsDown = false;\n        document.addEventListener('mousedown', () => {\n            window.mouseIsDown = true;\n        });\n        document.addEventListener('mouseup', () => {\n            window.mouseIsDown = false;\n        })\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData() {\n        let crimeAPI = `https://data.police.uk/api/stops-street?lat=${this.state.latitude}&lng=${this.state.longitude}&date=${this.state.date}`;\n        this.setState({loading: true});\n        axios\n            .get(crimeAPI)\n            .then(res => {\n                const streetNames = res.data.map(crime => crime.location.street.name);\n                const filteredNames = streetNames.filter((streetName, pos) => streetNames.indexOf(streetName) === pos);\n                this.setState({\n                    data: res.data,\n                    streetNames: filteredNames,\n                    loading: false\n                });\n                // console.log(res.data);\n                // console.log(this.state);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    updateCoordinates(lat, lon, zoom = Number(this.state.zoom)) {\n        this.setState({\n            latitude: lat.toFixed(4),\n            longitude: lon.toFixed(4),\n            zoom: zoom.toFixed(2)\n        }, this.getData);\n    }\n\n    getLatitudeAndLongitude() {\n        const postcodeAPI = \"http://api.postcodes.io/postcodes/\";\n        const postcodeRegex = /([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\\s?[0-9][A-Za-z]{2})/;\n        if (postcodeRegex.test(this.state.postcode)) {\n            axios\n                .get(postcodeAPI + this.state.postcode.split(\" \").join(\"\"))\n                .then(res => {\n                    this.updateCoordinates(res.data.result.latitude, res.data.result.longitude);\n                })\n                .catch(err => {\n                    // console.log(err)\n                });\n        }\n    }\n\n    getPostcode(lat, lon) {\n        const latLonToPostcodeAPI = `http://api.postcodes.io/postcodes?lon=${lon}&lat=${lat}`;\n        axios\n            .get(latLonToPostcodeAPI)\n            .then(res => {\n                this.setState({postcode: res.data.result[0].postcode});\n            })\n            .catch(err => {\n                // console.log(err)\n            });\n    }\n\n    updatePostcode(event) {\n        this.setState({postcode: event.target.value}, this.getLatitudeAndLongitude);\n    }\n\n    changeDate(date) {\n        this.setState({\n            date: date\n        }, this.getData);\n    }\n\n    render() {\n        return(\n            <div className=\"myApp\">\n                <header>\n                    <GeoMap\n                        latitude={this.state.latitude}\n                        longitude={this.state.longitude}\n                        zoom={this.state.zoom}\n                        updateCoordinates={this.updateCoordinates}\n                        getPostcode={this.getPostcode}\n                        data={this.state.data}\n                        date={this.state.date}\n                    />\n                    <Controls\n                        postcode={this.state.postcode}\n                        updatePostcode={this.updatePostcode}\n                        latitude={this.state.latitude}\n                        longitude={this.state.longitude}\n                        loading={this.state.loading}\n                        recordCount={this.state.data.length}\n                        changeDate={this.changeDate}\n                        date={this.state.date}\n                        updateCoordinates={this.updateCoordinates}\n                    />\n                </header>\n                {/*<StreetNames nameList={this.state.streetNames}/>*/}\n                {/*<Info data={this.state.data}/>*/}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}